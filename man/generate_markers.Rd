% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_proportions.R
\name{generate_markers}
\alias{generate_markers}
\title{Generate markers from components}
\usage{
generate_markers(df, n = 30, thr = Inf, sel.comp = paste("IC",
  1:ncol(df$S), sep = ""), return = "gene.list", orient.long = TRUE)
}
\arguments{
\item{df}{list (usually output of \code{run_fastica}) containing at least \code{S}
and \code{names} elements}

\item{n}{number of top genes considered from each signature, n = 30 by
default}

\item{thr}{max gene expression, if removal of outliers is necessary, Inf (no
threshold) by default.}

\item{sel.comp}{components of interest (i.e. identified as specific to some profiles/metagenes
(i.e. immune cells)), by default it takes all columns of S matrix, can be provided as valid
column names or numeric index}

\item{return}{return \code{gene.list} or \code{gene.ranked}}

\item{orient.long}{\code{TRUE} by default, if \code{S} is oriented change to \code{FALSE}}
}
\value{
function returns either list of gene markers \code{gene.list} for each
  component or list of \code{gene.ranked} which are gene names with weights
}
\description{
It extracts from set of components (i.e. ICA S matrix) the n top genes (with
weights if needed) to use as marker list or markers with weights for
estimation of abundance through \code{\link{get_scores}}
}
\examples{
set.seed(123)
 res_run_ica <- run_fastica (
 Example_ds,
 overdecompose = FALSE,
 n.comp = 20,
 with.names = TRUE
)
corr <- correlate_metagenes(
   S = res_run_ica$S,
   gene.names = res_run_ica$names)

assign <- assign_metagenes(corr)

immune <- identify_immune_comp(corr$r[,"M8_IMMUNE"], assign[, "component"], threshold = 0.1)

generate_markers(df = res_run_ica,n = 10,sel.comp= names(immune))
generate_markers(df = res_run_ica,n = 10,sel.comp= names(immune), return= "gene.ranked")
}
\seealso{
\code{run_fastica}, \code{\link{get_scores}}
}
